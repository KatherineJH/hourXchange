import com.diffplug.spotless.LineEnding

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.diffplug.spotless' version '7.0.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	implementation 'co.elastic.clients:elasticsearch-java:8.10.4'
	implementation 'org.openkoreantext:open-korean-text:2.1.0'
	implementation 'org.scala-lang:scala-library:2.12.15'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.15.2' // xml 파싱용
	implementation 'org.springframework.boot:spring-boot-starter-actuator' // aws 상태 검사용

	// dialflow 연동용
	implementation 'com.google.cloud:google-cloud-dialogflow:4.68.0'
	implementation 'com.google.auth:google-auth-library-oauth2-http:1.16.0'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	// SecureSessionAgent 클래스를 포함하는 Auth 라이브러리
	implementation 'com.google.auth:google-auth-library-oauth2-http:1.35.0'

	// radis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'com.fasterxml.jackson.core:jackson-databind' // JSON 직렬화를 위한 Jackson 모듈
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310' // Java 8+ 날짜/시간 지원

	// QueryDSL (jakarta classifier 명시)
	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	// *** JPA API 명시 ***
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}
// querydsl
sourceSets {
	main.java.srcDirs += "$buildDir/generated/sources/annotationProcessor/java/main"
}
tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file("$buildDir/generated/sources/annotationProcessor/java/main")
}

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
	java {
		eclipse().configFile("eclipse-formatter.xml")
		importOrder('java', 'javax', 'org', 'com')
		removeUnusedImports()
		trimTrailingWhitespace()
		endWithNewline()
	}
}

tasks.withType(Test).configureEach {
	// 각 테스트 JVM 프로세스에 할당할 힙 크기
	minHeapSize = "256m"
	maxHeapSize = "512m"

	// 동시에 실행될 포크 프로세스 개수
	maxParallelForks = 1

	// 일정 개수 테스트 후 JVM 재시작 (메모리 누수 완화)
	forkEvery = 50

	// 테스트 로그를 콘솔에 자세히 보여주기
	testLogging {
		showStandardStreams = true
		events "passed", "skipped", "failed"
	}
}
