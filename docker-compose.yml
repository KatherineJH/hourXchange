# # [시작 할 때]
# # docker-compose build
# # docker-compose --env-file ./backend/.env up -d #./backend/.env의 값을 가져와서 실행
# # docker-compose up -d // 백그라운드에서 실행
# # [끄고자 할 때]
# # docker-compose down -v

version: "3.8"

services:
  mysql:
    container_name: hourxchange_mysql
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}          # 신규 사용자 계정 생성
      MYSQL_PASSWORD: ${DB_PASSWORD}  # 신규 사용자 비밀번호
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d

  elasticsearch:
    container_name: hourxchange_elasticsearch
    image: elasticsearch:8.17.2
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 5
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data

  redis:
    container_name: hourxchange_redis
    image: redis:7
    ports:
      - "6379:6379"

  flask:
    build:
      context: ./flaskAPI
      dockerfile: Dockerfile
    container_name: hourxchange_flask
    ports:
      - "5000:5000"
    volumes:
      - ./flaskAPI:/app

networks:
  default:
    name: hourXchange_default

volumes:
  mysql_data:
  esdata:

